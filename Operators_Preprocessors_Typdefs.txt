========================================= PREPROCESSORS AND MACROS ===========================

1) What will be the output of the C program?
#include<stdio.h>
#define CONDITION(i)\
printf("preprocessor works\n");                         
int main()
{
	CONDITION(0);// get replaced with printf("preprocessor works\n");
	return 0;
}
preprocessor works

2) What will be the output of the C program?
#include<stdio.h>
# define loop while(true)
int main()
{
	loop;  //substituted with while(true);
	printf("preprocessor-aptitude");
	return 0;
}
Infinite loop

3) What will be the output of the C program?
#include<stdio.h>
# define x --5
int main()
{
	printf("%d",x);//It gives error
	return 0;
}


4) What will be the output of the C program ?
#include<stdio.h>
#define sqr(x) ++x * ++x
int main()
{
	int a = 3, z;
	z = ++a * ++a; // ++a(4) * ++a(5) -> 5 * 5 = 25     
	a -= 3; //a = a - 3 -> 5 - 3 = 2
	printf("%d %d", sqr(a), z); // sqr(a) -> ++a(3) * ++a(4) -> 4 * 4 = 16
	return 0;
}
It prints 16 25

5) What will be the output of the C program?
#include<stdio.h>                      
#define x 1+2
int main()
{
	int i;
	i = x * x * x;// x * x * x gets replaced with 1 + 2 * 1 + 2 * 1 + 2
	printf("%d",i);
}
It prints 7

6) What will be the output of the C program?
#include<stdio.h>
#define a =
int main()
{
	int num a 6; //a gets replaced with =
	printf("%d",num);
	return 0;
}
It prints 6

7) What will be the output of the C program?
#include<stdio.h>
#define fun(x,y) x*y
int main()
{
	int x = 2, y = 1;
	printf("%d",fun(x + 2, y - 1));
	return 0;
}
It prints 3
x + 2 * y - 1
2 + 2 * 1 - 1
2 + 2 - 1
3

8) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char DATE[15] = "Current Date";
	printf("%s\n", __DATE__ );
	return 0;
}
It prints the date at which this file is compiled

9) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char TIME[15] = "Current Time";
	printf("%s\n",__TIME__);
	return 0;
}
It prints the time at which this file is compiled


10) What will be the output of the C program?
#include<stdio.h>
int main()
{	
	printf("Line :%d\n", __LINE__ );
	return 0;
}
It prints Line: Line number of this printf when it compiled
If its line number is 4, then Line: 4 is output

11) What will be the output of the C program?
#include<stdio.h>
#define  preprocessor_works(x, y)  \
	printf(#x " and " #y " are great!\n")
int main(void) {
	preprocessor_works(you, me);
	return 0;
}
It prints you and me are great!

12) What will be the output of the C program?
#include<stdio.h>
# define puts  "%s C preprocessor"
int main()
{
	printf(puts, puts);
	return 0;
}
It prints %s C preprocessor C preprocessor

13) What will be the output of the C program?
#include<stdio.h>
#define preprocessor(n) printf ("macro" #n " = %d", macro##n)
int main(void) {
	int macro25 = 47;
	preprocessor(25);
	return 0;
}
It prints macro25 = 47

14) What will be the output of the C program?
#include<stdio.h>
#include<string.h>
#define MACRO(num) ++num 
int main()
{
	char *ptr = "preprocessor";
	int num =strlen(ptr);
	printf("%s  ", MACRO(ptr));// It prints reprocessor
	printf("%d", MACRO(num)); //It prints 13
	return 0;
}

15) What will be the output of the C program?
#include<stdio.h>
#define i 10
int main()
{
	#define i 20
	printf("%d",i);
	return 0;
}
It prints 20 with warning

16) What will be the output of the C program?
#include<stdio.h>
#define clrscr() 50
int main()
{
	clrscr();
	printf("%d\n",clrscr());
	return 0;
}
It prints 50, at pre-processing stage, clrscr() will be substituted with 50

17) What will be the output of the C program?
#include<stdio.h>
#define int char
main()
{
	int i=5;
	printf ("sizeof (i) =%d", sizeof (i));
}
It prints sizeof (i) =1

18) Write programs to understand the usage of below preprocessor directives.
#include, #if, #ifdef, #ifndef, #else, #elif, #endif, #define, #undef, #line, #error, and #pragma

===================================== TYPEDEF =========================================

1) In the following code, the P2 is Integer Pointer or Integer?
typedef int *ptr;
ptr p1, p2;
p2 is integer pointer

2)  In the following code what is 'P'?
typedef char *charp;
const charp P;
charp is new typename for pointer of character type
p is constant pointer of character type

3) What is x in the following program?
#include<stdio.h>
int main()
{
    typedef char (*(*arrfptr[3])())[10];
    arrfptr x;
    return 0;
}
x is array of three function pointers which returns pointer to an array of 10 integers

4) What is apfArithmatics in the below statement?
typedef int (*apfArithmatics[3])(int,int); 
apfArithmatics is the new type name for array of 3 function pointers which has 2 arguments of two integer type.

5) What is pf in the below statement?
typedef int (*pf)(int); 
pf is new type name for function pointer which has 1 argument of integer type

6) What do the following declarations mean?
typedef char *pc; -> pc is new typename for pointer of character type 
typedef pc fpc(); -> fpc is new typename for function which returns pointer of character type.
typedef fpc *pfpc;   ->pfpc is pointer to the function returning pointer to char
typedef pfpc fpfpc();  ->fpfpc() is function returning a pointer to a function returning pointer to char
typedef fpfpc *pfpfpc;  ->pfpfpc is a pointer to the function returnig a pointer to a function returning a pointer to char
pfpfpc a[N];  ->a is an array of pointers to functions returning a pointer to a function taking no arguments returning a pointer to a char 